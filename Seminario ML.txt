
# Definition

---
> “A computer program is said to learn from experience E with respect to some class of tasks T and performance measure P, if its performance at tasks in T, as measured by P, improves with experience E.” (Mitchell, 1997)

Notes: Very broad definition.

---
## The tasks, T

- Classification
- Regression
- Translation
- Anomaly detection
- Denoising
- Generation

---

## The Experience, E

In order to work with the abstract concept of experience, it is usually represented by a dataset $\mathcal{D}$ of samples $x_i$ from which our algorithm tries to extract information relevant to the task.


---
# Types

---

When given a dataset for learning a task, we distinguish two types of learning problems:

- **Unsupervised learning**, in our dataset $\mathcal{D}$ the data contains patters from which we wish our algorithm to learn properties useful for the task.

- **Supervised learning**, we also want our algorithm to learn from the dataset, but we specify a concrete label $y_i$ associated with each sample $x_i$ we wish our model to predict.

---
### Supervised:

#### Problems
- Classification
- Regression

#### State-of-the-art solutions
- LGBM for the win
- Explainable ML
- GNNs

---
### Unsupervised learning:

#### Problems
- Speech synthesis
- Text generation
- Image generation

#### State-of-the-art solutions
- Auto encoders
	-  Something here about dimensionality reduction and compression.
- LLMs
- Self-supervised


---

### Reinforcement:

#### Problem explanation 
- Agent
- Environment with state
- Reward

#### State-of-the-art solutions
- Tree based (muzero, alphafold, matrix mul)
- Here or somewhere else about symbolic regression.